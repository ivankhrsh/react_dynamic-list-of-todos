{"version":3,"sources":["types/FilterBy.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","components/Helpers.tsx","index.tsx"],"names":["FilterBy","TodoItem","todo","selectedTodo","handleSelectTodo","isSelectedTodoId","className","cn","id","completed","title","type","onClick","TodoList","todos","onChangeTodo","map","TodoFilter","onChangeFilter","query","setQuery","handleQueryChange","useCallback","event","target","value","clearQuery","onChange","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedUser","selectedUser","closeModal","useState","isLoadingUser","setIsLoadingUser","loadUser","a","userId","userFromServer","useEffect","href","email","name","App","setTodos","setSelectedTodo","isLoadingTodos","setIsLoadingTodos","filter","setFilter","visibleTodos","useMemo","initialTodos","normalizedQuery","trim","toLowerCase","matchesQuery","includes","filterTodos","loadTodos","todosFromServer","length","filterType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44296ed7.chunk.js","sourcesContent":["export enum FilterBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  handleSelectTodo: (todo: Todo) => void\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  handleSelectTodo,\n}) => {\n  const isSelectedTodoId = selectedTodo === todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn(\n        { 'has-background-info-light': isSelectedTodoId },\n      )}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n\n        <p className={cn(\n          {\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          },\n        )}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => handleSelectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn(\n              {\n                'far fa-eye': !isSelectedTodoId,\n                'far fa-eye-slash': isSelectedTodoId,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onChangeTodo: (todo: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onChangeTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          handleSelectTodo={onChangeTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useCallback } from 'react';\nimport { FilterBy } from '../../types/FilterBy';\n\ninterface Props {\n  onChangeFilter: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  query: string,\n  setQuery: (query: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeFilter,\n  query,\n  setQuery,\n}) => {\n  const handleQueryChange = useCallback((\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    setQuery(event.target.value);\n  }, []);\n\n  const clearQuery = useCallback(() => (setQuery('')), []);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={onChangeFilter}>\n            <option value={FilterBy.All}>All</option>\n            <option value={FilterBy.Active}>Active</option>\n            <option value={FilterBy.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  setSelectedUser: (user: User | null) => void,\n  selectedUser: User | null;\n  selectedTodo: Todo | null;\n  closeModal: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedUser,\n  selectedUser,\n  selectedTodo,\n  closeModal,\n}) => {\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n\n  const loadUser = async () => {\n    setIsLoadingUser(true);\n\n    if (selectedTodo) {\n      const userFromServer = await getUser(selectedTodo.userId);\n\n      setSelectedUser(userFromServer);\n    }\n\n    setIsLoadingUser(false);\n  };\n\n  useEffect(() => {\n    if (!selectedUser) {\n      loadUser();\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (selectedUser && selectedTodo) && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n              aria-label=\"Close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport './App.css';\nimport { filterTodos } from './components/Helpers';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<null | Todo>(null);\n  const [isLoadingTodos, setIsLoadingTodos] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<null | User>(null);\n  const [filter, setFilter] = useState<string >('all');\n  const [query, setQuery] = useState('');\n\n  const visibleTodos = useMemo(\n    () => filterTodos(todos, filter, query),\n    [todos, filter, query],\n  );\n\n  const loadTodos = async () => {\n    setIsLoadingTodos(true);\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n    setIsLoadingTodos(false);\n  };\n\n  useEffect(() => {\n    if (todos.length === 0) {\n      loadTodos();\n    }\n  }, [selectedTodo]);\n\n  const handleSelectTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const filterType = event.target.value;\n\n    setFilter(filterType);\n  };\n\n  const closeModal = () => {\n    setSelectedUser(null);\n    setSelectedTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeFilter={handleFilterChange}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoadingTodos\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onChangeTodo={handleSelectTodo}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedUser={selectedUser}\n          setSelectedUser={setSelectedUser}\n          selectedTodo={selectedTodo}\n          closeModal={closeModal}\n        />\n      )}\n    </>\n  );\n};\n","import { FilterBy } from '../types/FilterBy';\nimport { Todo } from '../types/Todo';\n\nexport const filterTodos\n= (initialTodos: Todo[], filter:string, query: string) => {\n  const normalizedQuery = query.trim().toLowerCase();\n\n  const filteredTodos = initialTodos.filter((todo: Todo) => {\n    const matchesQuery = todo.title.toLowerCase().includes(normalizedQuery);\n\n    switch (filter) {\n      case FilterBy.Active:\n        return !todo.completed && matchesQuery;\n\n      case FilterBy.Completed:\n        return todo.completed && matchesQuery;\n\n      default:\n        return matchesQuery;\n    }\n  });\n\n  return filteredTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}